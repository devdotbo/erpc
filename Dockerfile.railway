# Build stage for Go
# syntax = docker/dockerfile:1.4

FROM golang:1.23-alpine AS go-builder

WORKDIR /build

# Install build dependencies
RUN apk add --no-cache git

# Copy go mod and sum files first for better layer caching
COPY go.mod go.sum ./
RUN go mod download

# Copy the source code
COPY . .

# Build the Go binary to a non-conflicting path (avoid clashing with repo dir 'erpc').
# Use Buildx-provided TARGETOS/TARGETARCH for multi-arch builds.
ARG TARGETOS
ARG TARGETARCH
RUN CGO_ENABLED=0 GOOS=${TARGETOS} GOARCH=${TARGETARCH} \
    go build -a -installsuffix cgo -o /build/erpc-server ./cmd/erpc/main.go

# Final stage
FROM alpine:latest

# Install ca-certificates for HTTPS requests
RUN apk --no-cache add ca-certificates

WORKDIR /app

# Copy the binary from builder
COPY --from=go-builder /build/erpc-server /app/erpc

# Copy the production config
COPY erpc.prod.yaml /app/erpc.yaml

# Copy entrypoint script
COPY entrypoint.sh /app/entrypoint.sh

# Ensure entrypoint script and binary are executable
RUN chmod 0755 /app/erpc /app/entrypoint.sh

# Expose ports
EXPOSE 4000 4001

# Use the entrypoint script
ENTRYPOINT ["/app/entrypoint.sh"]